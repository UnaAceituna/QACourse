1. Каскадная модель разработки ПО, или водопадная. Чтобы перейти на следующий этап работы, мы должны закончить предыдущий. Не очень пратична. В слчае необходимости внесения требований нужно заново всё переделывать, возвращаться полностью назад.
При этом каждый этап полностью документируется, проще спланировать сроки и затраты. Известно когда запускается тот или иной этап.
Используется для ПО, кот мигрируют с одной платформы на другую, либо изначально все данные чётко сформулированы (банковские системы например)

2. V-образная модель. Есть строгие этапы работы, планирование тестирования и верификация на раннем этапе, так же здесь есть возможность проведения промежуточного тестирования для каждого уровня.
И всё же эта модель не очень гибкая, нет возможности динамического внесения измеенений.
Исп для задач с более обширными потребностями в тестовом покрытии.

3. Итерационная, инкрементальная модель. Мини-циклы, где происходит разработка отдельных секторов. 
Происходит раннее создание работающего ПО, такая система готова к изменениям требований на любом этапе разработки.
Но каждая фаза самостоятельна, не всегда все требования известны к началу проектирования
Подходит для крупных проектов, когда известны хотя бы ключевые требования
